{
	"name": "onprem_to_azsql_copy_sync",
	"properties": {
		"description": "Pipeline to synchronize data from on-premises databases to Azure SQL, ensuring up-to-date data replication.",
		"activities": [
			{
				"name": "GetAllTables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT SchemaName, TableName\n  FROM [dbo].[CommandTableWK]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ConfigTableAzSQLDataset",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEachTable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetAllTables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetAllTables').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "GetLastUpdatedanKeysCT",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@{concat('SELECT LastUpdateAt as OldLastUpdated, PrimaryKey1, PrimaryKey2\n  FROM [dbo].[CommandTableWK] WHERE TableName = ''',item().TableName,'''',';')}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ConfigTableAzSQLDataset",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "GetLastUpdatedFromSource",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@{concat('SELECT MAX(LastUpdated) AS LastUpdated FROM ',item().SchemaName,'.',item().TableName)}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "OnGenericPremSQL_Dataset",
									"type": "DatasetReference",
									"parameters": {
										"TName": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"SName": {
											"value": "@item().SchemaName",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "CopyEachTable",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "GetLastUpdatedanKeysCT",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "GetLastUpdatedFromSource",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT * FROM ',item().SchemaName,'.',item().TableName, ' WHERE LastUpdated > ''', activity('GetLastUpdatedanKeysCT').output.firstRow.OldLastUpdated,'''', ' AND LastUpdated <=''',activity('GetLastUpdatedFromSource').output.firstRow.LastUpdated, '''',';')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "OnGenericPremSQL_Dataset",
									"type": "DatasetReference",
									"parameters": {
										"TName": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"SName": {
											"value": "@item().SchemaName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ParquetTables",
									"type": "DatasetReference",
									"parameters": {
										"dataset_schemaname": {
											"value": "@item().SchemaName",
											"type": "Expression"
										},
										"dataset_tablename": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "UpdateLastUpatedDate",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CopyEachTable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[UpdateCommandTableWK]",
								"storedProcedureParameters": {
									"LastUpdatedTimestamp": {
										"value": {
											"value": "@activity('GetLastUpdatedFromSource').output.firstRow.LastUpdated",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "LogErrorToDatabase",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CopyEachTable",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[UpdateLogDataSyncStatus]",
								"storedProcedureParameters": {
									"Log": {
										"value": {
											"value": "@string(activity('CopyEachTable').output.errors)",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineExecutionTime": {
										"value": {
											"value": "@activity('CopyEachTable').output.copyDuration",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineTriggerTime": {
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": "Failed",
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "LogSuccessToDatabase",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CopyEachTable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[UpdateLogDataSyncStatus]",
								"storedProcedureParameters": {
									"Log": {
										"value": {
											"value": "@concat('Number of copied rows ', activity('CopyEachTable').output.rowsCopied)",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineExecutionTime": {
										"value": {
											"value": "@activity('CopyEachTable').output.copyDuration",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineTriggerTime": {
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": "Success",
										"type": "String"
									},
									"TableName": {
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "AlertInTeams",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "ForEachTable",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "teams_alerts",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"pipeline_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": "'Execution failed. Attention required!'"
					}
				}
			}
		],
		"annotations": []
	}
}